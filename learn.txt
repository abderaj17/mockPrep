PSEUDO Classes -
These are used to target elements based on their state or position
in the document.
They are denoted by (:) colon followed by the pseudo-class name.

EX- :hover
    :active
    :focus
    :first-child
    :last-child

PSEUDO Elements -
Pseudo elements are used to target a specific part of an element,
such as its content , before or after content, or its first letter.
They are denoted by a double colon(::) followed by the pseudo-element name

EX- ::before
    ::after
    ::first-letter
    ::first-line


Z-Index: The z-index property in css is used to specify the stacking
order of element that overlap with each other.
It determines which element is displayed on top of another.


KeyFrames are used to create the animations in CSS.
Then animation name , duration, timing-function, delay.


In CSS , transform, transition, animation are three distinct properties that help create
visual effects and interactions.



------->>>> DAY2 <<<<-------

---->> HTML <<----

Different types of HTML Elements->

Majorly 2 types ---> Void(no closing tag) & Non Void(closing tag).

1) Heading Elements == h1 ---- h6
2) Stuctural Elements ==>>
    header, nav, main, section, article, aside, footer.
3) Text Elements==>>
   p, span, a, strong, em, i, bold, small, mark, del, code, kbd, samp, var, br.
4) Image and Multimedia Elements=>>
   img, audio, video, figure, figcaption, track.
5) Table Elements=>>
   table, thead, tbody, tr, td, th, caption, colspan, tfoot.
6) Form Elements==>>
   input, form, label, button, select, optgroup, option, textarea, progress, meter, output.
7) Semantic Elements==>>
   abbr, address, blockquote, cite, data.



FORMS -->>
action -> Specify the URL that will process the form data when submitted.
           action="/submit-form"
method -> Specify the HTTP method to use when submitting the form data.
           get, post, put, delete, etc.
target -> Specify where to display the response from the server after submiting the form.
          _self, _blank, _parent
novalidate -> Specifies that the from should not be validate when submitted.

autocomplete -> Autocompleted completed by browser.


<iframe> tag -> This is used to embed another HTML document within the current HTML
                 document. It creates an inline frame that can display content from another source.

                 Attributes:
                 src, width, heigth, frameborder, scrolling, allowfullscreen

                 Example: <iframe src="http://www.example.com" width="400" heigth="300" frameborder="0" scrolling="yes" allowfullscreen="true"></iframe>



*  REGEX code for Email Validation ==>> (/^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,6}$/);
-->> .test() to test the formatting matching of the String.



----->>>>> Another Day<<<<------

Clip Path Property -->> 
This property in css used to define a clipping region for an element , making only a specific part of the element
visible while hiding the rest.

Ex--->> img{
   clip-path: circle(50%);
   width: 200px;
   heigth: 200px;
}

-->> Opacity property in CSS is used to set the transparency of an element. It specifies how 
opaque (solid) or transparent and element is.

(.element{
   Opacity: 0.5;
})


Grid & Flexbox -->>
        Both used for responsive and flexible layouts. But also they have some 
        limitations and used for different purpose and scenarios.
   
   Flexbox -> Simple layouts, Dyanamic content, Responsive design.

   Grid -> Complex layouts, Multi Column layouts, Grid Based design.


--->>> Overflow Property =>> The Overflow property in css controls how content is handled when it exceeds the
      boundaries of its container. controls clip, scroll, expand.

      (Overflow -->> visible| hidden| scroll| auto| inherit);


Relative -->> Positioning schemas position and element relative to its normal position.
             The element is shifted from its original  position but still occupies space in the
             normal document flow.

Absolute -->> Positioning schemas remove an element from the normal document flow
              and position it relative to its nearest positioned ancestor(instead of  its normal position).
              The element does not occupy space in the normal document flow.



-->> Tansform Transition and Animations <<---

Tansform-> This property changes the appearance of an element by applying
            a tansformation such as : Rotating, Scaling, Translating(moving),Skewing.

Transition -> This property controls the way an element changes from one state to another.
               It specifies the duration , timing function, and delay of the transition.
               Such as: hover, :active, or :focus etc.

Animations -> The animation Property allows you to define a sequence of styles and apply them
               to an element over a specified period. Animations can be repeated, paused ,
                and controlled using various properties.



                       ---->>>> JAVASCRIPT <<<<---
 
 Data types in JAVASCRIPT-->>
 1) Primitive ==>> Numbers, String,  Boolean(true, false), Null, Undefined, Symbols.

 2) Non-Primitive ==>> Object({}), Array([]), function(()=>{}), Date, RegExp(/^[a-zA-Z0-9]+$/). 



Let, Var, & Const --->>

Let-> Let was introduces by ECMAScript 2015(ES6) as a new way to declare variable.
     It is similar to var but has some difference as:
   i) Block scope: Variable declare with let have block scope, which mean they are only 
      accessible within the block in which they are declared.

  ii) No hoisting: Variables declared with let are not hoisted to the top of their scope,
     which means they are only accessible after the actual declaration is made.

 iii) Variables declared with let cannot be redecalred in the same scope.
 


 ---->>Another Day<<-----

 Closure -> Closure allow funtions to remember variable even after the outer function has finished
             execution.
             Closure are created when a function is defined inside another function and accesses variable
             from the outer function.



Asynchronous -> Is the non blocking in architecture, so the execution of one task
               isn't dependent on another. Tasks can run simultenously.

Synchronous -> It is a blocking architecture, so the execution of each operation depends on
                completing the  one before it. Each operation require answer before moving on to
                the next iteration.



Callback -> A Callback is a funtions that is passed as an argument in another function.
            It is executed by that function. 
            Used for Handeling events such as mouse clicks or keyboard input.



SetTimeOut -> SetTimeOut is a function that executes a block of code after a specified amount 
             of time.

SetInterVal -> SetInterVal is a function that executed a block of code Repeatedly after a specified amount of time.



  * There is three main client-side storage options: LocalStorage,
    sessionStorage, and cookies. Each has its own strenghts, weakness, and use cases.

LocalStorage-> LocalStorage allows data to be stored locally on the user's browser.
               The data stored as key value pairs and it is persistent("jiddi"). Means it
               remain even after browser is closed.  (5MB)

SessionStorage-> SessionStorage same as the LocalStorage but it will avaiable until user closes
                  the browser. (5MB)

Cookies->  Cookies are small text files that are stored on the user's device by the web browser.
           They are sent to the server with each HTTP request, 
           allowing the server to store and retrieve data. (4KB).



PROMISE -->> A PROMISE in JAVASCRIPT is an Object that represent the eventual completion of and 
             Asynchronous operation. By this we can handle Asynchronous operation in clean and
             readable way, also avoids Callback hell(Pyramid of doom).
             __3 States of PROMISE --> Pending(Initial state)
                                       Fulfilled(Resolved)
                                       Rejected(failed).


   ---->>> Another Day <<<-----

Aync/Await -->>